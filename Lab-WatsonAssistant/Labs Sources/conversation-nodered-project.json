[{"id":"a31cf40f.930f48","type":"function","z":"57356f08.25b438","name":"Pre-Proc","func":"\nvar text0 = '';\nvar lpayload =null;\n\n\n//Session Id Management\nif (global.get(\"globalSessionID\")) {\n    node.warn(\"session global set: \\n\" + global.get(\"globalSessionID\"));\n    msg.params ={};\n    msg.params.session_id = global.get(\"globalSessionID\");\n}\n\n//reset session ID if input null\nif (msg.payload.text){\n    text0=msg.payload.text;\n    msg.payload=text0\n    //retrieve the context and input\n        if (global.get(\"payloadRed\")) {\n            lcontextvariable = global.get(\"payloadRed\");\n            if (lcontextvariable.context && lcontextvariable.context.emotion){\n                node.warn(\"test: \\n\" + JSON.stringify(lcontextvariable));\n                msg.additional_context= {\"emotion\":lcontextvariable.context.emotion}\n            }\n            lpayload = {\n                \"context\": {},\n                \"input\":{\"text\": text0}\n            };\n            global.set(\"payloadRed\",lpayload)\n        } else \n        {\n            lpayload= {\n                \"context\": {},\n                \"input\":{ \"text\": text0}\n                };\n            global.set(\"payloadRed\",lpayload)    \n        }\n        \n        node.warn(\"contextvariable: \\n\" + JSON.stringify(lpayload));\n    } else {\n    msg.payload= null\n    //reset session\n    msg.params ={};\n    msg.params.session_id = \"\";\n    node.warn(\"New session: \\n\");\n    }\n\n//var text0 = msg.payload.text;\n//var lpayload = global.get(\"payloadRed\");\n\n\n    \n//Display the captured input    \nnode.warn(\"Input Captured: \" + msg.payload);\n\n//Update Public or Private Context\nif (global.get(\"updatesContext\")) {\n    var lupdatesContext = global.get(\"updatesContext\");\n    var lvariable = lupdatesContext.variable;\n    var lcontext = lupdatesContext.context;\n//    var lvalue = lupdatesContext.value;\n    \n    lupdatesContext = {\n        \"variable\":lvariable,\n        \"context\":lcontext,\n        \"value\" : text0,\n        };\n    global.set(\"updatesContext\",lupdatesContext);\n\n    if (lcontext===\"public\") {\n        //update public context\n        //msg.payload.context[lvalue] = text0;\n        node.warn(\"publicContext: \" + msg.payload);\n    }\n    else if (lcontext===\"private\") {\n        node.warn(\"private Context: \" + msg.payload);\n        //Reset the input sent to Assistant    \n        msg.payload=\"\";\n    }\n    \n    node.warn(\"Input Sent to Assistant: \" + msg.payload);\n    \n//    global.set(\"updatesContext\",null);\n}\n\n//Don't initiate API call when the user iniate the variables\n//if (global.get(\"initVariable\") === 1) \n//    {\n//    global.set(\"initVariable\",0);\n//    return [null,msg];\n//    }\n//else\n//    {\n//    return [msg,null];\n//    }\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":220,"wires":[["f99b6c25.132dc","bd6c42f6.804e5"]]},{"id":"a37232c1.818e18","type":"function","z":"57356f08.25b438","name":"Post-proc","func":"\nvar i;\nvar outputtext ='';\n//Save the global variable of Conversation\n//intents , entities, input.text, ouput, context\nvar lpayload = msg.payload;\nvar txt = \"\";\nvar x;\nvar lprivatecontext = global.get(\"privateContext\");\nvar lupdatesContext = null;\n//object description\n//    updatesContext ={\n//      \"variable\":lvariable,\n//      \"context\":lcontext,\n//      \"value\" : lvalue,\n//        };    \n\n//Return output text message\nif (msg.payload.output && msg.payload.output.generic[0] && msg.payload.output.generic[0].text) {\n    for (i=0 ; i < msg.payload.output.generic.length; i++)\n    {\n        outputtext = outputtext + ' ' +  msg.payload.output.generic[i].text;\n    }\n}\n\n//Manage session ID\nif (msg.payload.session_id) {\n    global.set(\"globalSessionID\",msg.payload.session_id);\n}\nnode.warn(\"session: \\n\" + global.get(\"globalSessionID\"));\n\n//global.set(\"payloadRed\",lpayload);\n\n// returns intents\nif (msg.payload.output.intents[0]) {\n   node.warn(\"intents: \" +  JSON.stringify(msg.payload.output.intents));\n    } else {\n    node.warn(\"intents: null\");    \n    }\n\n//prepare to update Public or Private Context\nif (msg.payload.output.user_defined && msg.payload.output.user_defined.updatesContext) {\n    global.set(\"updatesContext\",msg.payload.output.user_defined.updatesContext);\n    node.warn(\"updates Context: \" + JSON.stringify(msg.payload.output.user_defined.updatesContext));\n    } \n    else if (global.get(\"updatesContext\")) {\n        \n    lupdatesContext = global.get(\"updatesContext\");\n    global.set(\"updatesContext\",null);   \n        \n    } \n//identify the right Outputs\nif (msg.payload.output.user_defined && msg.payload.output.user_defined.CallToneAnalyser) {\n    //build the payload for the toneanalyser\n    var lpayload = global.get(\"payloadRed\");\n    var utterances = [];\n    utterances[0] ={\"text\":lpayload.input.text};\n    msg.payload.utterances = utterances;\n//    msg.payload =lpayload.input.text;  \n    return [null,msg];\n} else\n{\n    //build the payload for the Web Form\n//    for (x in lpayload.output.text){\n//        txt += lpayload.output.text[x]+ \" \";\n//        }\n \n    //Return output text message\n//    if (msg.payload.output && msg.payload.output.generic[0].text) {\n//        for (i=0 ; i < msg.payload.output.generic.length; i++)\n//        {\n//            output = output + ' ' +  msg.payload.output.generic[i].text;\n//            txt += msg.payload.output.generic[i].text+ \" \";\n//        }\n//    }\n \n    txt= outputtext;\n    node.warn(\"output sent by Assistant: \" + txt);\n    \n    if (txt.lastIndexOf(\"{{\")!==-1 && txt.lastIndexOf(\"}}\")!==-1){\n        var lvariable=txt.substring(txt.lastIndexOf(\"{{\")+2,txt.lastIndexOf(\"}}\"));\n        if (lvariable!==\"\"){\n            if (lupdatesContext && lupdatesContext.variable ===lvariable ){\n                var lvariableValue = lupdatesContext.value;\n                node.warn(\"public Context variable: \" + lvariable + \": \" +lvariableValue);\n            } else if (lprivatecontext[lvariable]) {\n                var lvariableValue = lprivatecontext[lvariable];\n                node.warn(\"private Context variable: \" + lvariable + \": \" +lvariableValue);\n            }\n            txt = txt.replace(\"{{\"+lvariable+\"}}\",lvariableValue);\n            node.warn(\"output sent to the user: \" + txt);\n        }\n    }\n    \n    msg.payload = txt;\n    return [msg,null];\n//return [msg];\n}\n\n\n","outputs":2,"noerr":0,"x":862.4398193359375,"y":220.40733337402344,"wires":[["6b439acc.82673c","f98ab33c.5e4c2"],["f98ab33c.5e4c2"]]},{"id":"f99b6c25.132dc","type":"watson-assistant-v2","z":"57356f08.25b438","name":"","service-endpoint":"https://api.eu-de.assistant.watson.cloud.ibm.com/instances/851a4048-02e9-481e-b8e7-82464c6e0a9b","assistant_id":"","debug":false,"restart":false,"return_context":true,"alternate_intents":false,"multisession":true,"timeout":"","optout-learning":false,"x":666.5,"y":219.99998474121094,"wires":[["a37232c1.818e18","ffdf9ee1.05e658"]]},{"id":"f98ab33c.5e4c2","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":1050,"y":178.1817626953125,"wires":[]},{"id":"ef20b7e6.5d1cd","type":"switch","z":"57356f08.25b438","name":"Text Length","property":"payload.text.length","propertyType":"msg","rules":[{"t":"gt","v":"20","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":230,"y":440,"wires":[["32458c70.f8ebbc"],["91803057.1a9558"]]},{"id":"944de900.c5936","type":"http in","z":"57356f08.25b438","name":"HTML","url":"/watson-chatbot","method":"get","upload":false,"swaggerDoc":"","x":90.72723388671875,"y":104.18185424804688,"wires":[["9a3d3d68.9dfb08"]]},{"id":"9a3d3d68.9dfb08","type":"function","z":"57356f08.25b438","name":"HTML Form","func":"\nvar html = \"\\n\\\n<html>\\n\\\n<head>\\n\\\n<script \\n\\\n  src='//code.jquery.com/jquery-3.1.1.min.js' \\n\\\n  integrity='sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=' \\n\\\n  crossorigin='anonymous'></script>\\n\\\n<script>\\n\\\nvar token = 'vH8Yx1kA9fK0sj3oENhnrjow';\\n\\\n$(function() {\\n\\\n    $('#message').keypress(function (e) {\\n\\\n        if (e.which == 13) {\\n\\\n            submit();\\n\\\n            return false;\\n\\\n        }\\n\\\n    });\\n\\\n    \\\n    $('#submit').click(submit);\\n\\\n    \\\n    function submit() {\\n\\\n        var msg = $('#message').val();\\n\\\n        $('#messages').append('<li class=\\\"human\\\">' + msg + '</li>')\\n\\\n        $('#message').val(\\\"\\\")\\n\\\n        var options = {\\n\\\n            url:'/watson-chatbot',\\n\\\n            method:'POST',\\n\\\n            data:{text: msg, token: token}\\n\\\n        }\\n\\\n        $.ajax(options).done(function(res) {\\n\\\n            $('#messages').append('<li class=\\\"robot\\\">' + res + '</li>')\\n\\\n            $('#messages').parent().scrollTop($('#messages').parent()[0].scrollHeight);\\n\\\n        })\\n\\\n    }\\n\\\n})\\n\\\n</script>\\n\\\n<style>\\n\\\n#messages {padding: 0px;} \\n\\\n#messages li {list-style-type: none; padding: 10px 30px; }\\n\\\n#message {padding-left: 10px; float: left; width: calc(100% - 100px); height: 50px; font-size: 30px;} \\n\\\nli.human {color: green; text-align: right}\\n\\\nli.robot {color: red; text-align: left}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body style='margin: 0px;'>\\n\\\n    <div style='height: calc(100% - 60px); overflow-y: scroll;'>\\n\\\n        <ul id='messages'></ul>\\n\\\n    </div>\\n\\\n    <div style='position: fixed; bottom: 20px; width: 100%; height: 40px;'>\\n\\\n        <input id='message'/>\\n\\\n        <input id='submit' type='submit' style='float: left; width: 100px; height: 50px; '/>\\n\\\n    </div>\\n\\\n</body>\\n\\\n</html>\\n\\\n\"\n\nmsg.payload = html;\n\nreturn msg;","outputs":1,"noerr":0,"x":290.72723388671875,"y":104.18185424804688,"wires":[["88993669.d1bfe8"]]},{"id":"88993669.d1bfe8","type":"http response","z":"57356f08.25b438","name":"","x":470.72723388671875,"y":104.18185424804688,"wires":[]},{"id":"9a8c28f5.63e75","type":"natural-language-understanding","z":"57356f08.25b438","name":"NLU Pre Proc","categories":true,"limitcategories":"","concepts":false,"maxconcepts":"8","doc-emotion":true,"doc-emotion-target":"","doc-sentiment":true,"doc-sentiment-target":"","entity":true,"entity-emotion":false,"entity-sentiment":false,"maxentities":"5","keyword":true,"keyword-emotion":false,"keyword-sentiment":false,"maxkeywords":"5","metadata":false,"relation":false,"semantic":false,"semantic-entities":true,"semantic-keywords":true,"maxsemantics":"50","limittextcharacters":"","syntax":false,"syntax-sentences":false,"syntax-tokens-lemma":false,"syntax-tokens-pos":false,"service-endpoint":"","x":720,"y":440,"wires":[["1bad5cb4.568a23","2916d185.d73206"]]},{"id":"1bad5cb4.568a23","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":890,"y":400,"wires":[]},{"id":"c9bc711a.ff24c","type":"link in","z":"57356f08.25b438","name":"main stream pre processing","links":["ce65dfcc.35949","46c17e92.9c206","b924fd08.ea7f78","677fe7d2.47e668","91803057.1a9558"],"x":326,"y":263.18174743652344,"wires":[["a31cf40f.930f48"]]},{"id":"7912d321.330fd4","type":"comment","z":"57356f08.25b438","name":"Web Form--------------------------------------------","info":"","x":222.45457458496094,"y":59.636383056640625,"wires":[]},{"id":"32458c70.f8ebbc","type":"function","z":"57356f08.25b438","name":"Pre - processing","func":"\nmsg.payload = msg.payload.text;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":480,"y":440,"wires":[["9a8c28f5.63e75","2aa2a63d.83a8a2"]]},{"id":"ca489e3e.ad9bd8","type":"comment","z":"57356f08.25b438","name":"Natural Language understanding-------------------","info":"","x":220,"y":340,"wires":[]},{"id":"d2c2a299.afc2b8","type":"link out","z":"57356f08.25b438","name":"User Input","links":["368ef5ae.10048a","80c27e64.3c61f"],"x":210.00003051757812,"y":262.18174743652344,"wires":[]},{"id":"2916d185.d73206","type":"function","z":"57356f08.25b438","name":"add Location to context","func":"var location = [];\nvar threshold = 0.5;\nvar entities ='';\nvar emptystring ='';\nvar lpayload = global.get(\"payloadRed\");\nvar language=''\n\n// simplify object returned by NLU to only the Location\nentities = msg.features.entities;\nlanguage = msg.features.language;\n\nif (entities.length > 0) {\n    if (entities[0].type==\"Location\") {\n        location=entities[0].text;\n        \n        //retrieve the context and send it to Conversation\n        // and add Location to conversation context\n        if (global.get(\"payloadRed\")) {\n            lpayload.context.location=location;\n            lpayload.context.language=language;\n            global.set(\"payloadRed\",lpayload);  \n        }\n    } \n    node.warn(\"Entities: \\n\" + JSON.stringify(entities));\n    node.warn(\"Language: \\n\" + JSON.stringify(language));\n} else {\n    node.warn(\" no detected entity: \\n\");\n    \n}\n\n//set text input for Conversation\ndelete msg.features;\ntext = msg.payload;\ndelete msg.payload;\nvar lcpayload={'text':text}\nmsg['payload'] = lcpayload;\n\nreturn msg;\n","outputs":1,"noerr":0,"x":970,"y":440,"wires":[["677fe7d2.47e668","7b1347ec.98208"]]},{"id":"677fe7d2.47e668","type":"link out","z":"57356f08.25b438","name":"","links":["c9bc711a.ff24c"],"x":1135,"y":440,"wires":[]},{"id":"7b1347ec.98208","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":1170,"y":400,"wires":[]},{"id":"2aa2a63d.83a8a2","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":640,"y":400,"wires":[]},{"id":"91803057.1a9558","type":"link out","z":"57356f08.25b438","name":"","links":["c9bc711a.ff24c"],"x":335,"y":480,"wires":[]},{"id":"80c27e64.3c61f","type":"link in","z":"57356f08.25b438","name":"","links":["d2c2a299.afc2b8"],"x":95,"y":440,"wires":[["ef20b7e6.5d1cd"]]},{"id":"1aa046cb.395f61","type":"comment","z":"57356f08.25b438","name":"Main stream","info":"","x":112,"y":157.99996948242188,"wires":[]},{"id":"9ce01b1f.adbc3","type":"http in","z":"57356f08.25b438","name":"Input","url":"/watson-chatbot","method":"post","upload":false,"swaggerDoc":"","x":92,"y":222,"wires":[["55ec9d7f.04deb4","a31cf40f.930f48"]]},{"id":"55ec9d7f.04deb4","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":276,"y":190.99998474121094,"wires":[]},{"id":"6b439acc.82673c","type":"http response","z":"57356f08.25b438","name":"","x":1051,"y":218.99998474121094,"wires":[]},{"id":"d6fcc4db.a47668","type":"comment","z":"57356f08.25b438","name":"--------------------Conversation message API Call ---------------------------","info":"","x":661,"y":153.99998474121094,"wires":[]},{"id":"ffdf9ee1.05e658","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":850.857177734375,"y":259.46751403808594,"wires":[]},{"id":"bd6c42f6.804e5","type":"debug","z":"57356f08.25b438","name":"","active":false,"console":"false","complete":"true","x":650,"y":280,"wires":[]}]